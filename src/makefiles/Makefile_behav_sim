TOPLEVEL=fsm
TESTNAME=default
SRC_VERILOG=../../src/rtl/systolic
SRC_FOLDER= $(SRC_VERILOG)
DEBUG=1
VCS=1

#Build up a list of verilog define statements to be used by vcs

VERILOG_DEFINES:= 
ifeq ($(DEBUG), 1)
		VERILOG_DEFINES := $(VERILOG_DEFINES)+DEBUG=1
endif
ifeq ($(VCS), 1)
		VERILOG_DEFINES := $(VERILOG_DEFINES)+VCS=1
endif

.DEFAULT_GOAL := vcs

# Move all the verilog files from the source directory over to this simulation directory
link_src:
	find $(SRC_FOLDER) -name '*.v' -exec ln -s -f {} ';'
	find $(SRC_FOLDER) -name '*.sv' -exec ln -s -f {} ';'
	find $(SRC_FOLDER) -name '*.svh' -exec ln -s -f {} ';'
	find $(SRC_FOLDER) -name '*.include' -exec ln -s -f {} ';'

$(TOPLEVEL).include:
	echo $(SRC) > $(TOPLEVEL).include

# A new option has been added here. Take a closer look at -cm. Look it up!
vcs:$(TOPLEVEL).include
	vcs -f $(TOPLEVEL).include +v2k -R +lint=all -sverilog -full64 \
		-timescale=1ns/10ps -debug_access+all -debug_region+cell+encrypt \
		-debug_access -l $(TOPLEVEL).log +define+$(VERILOG_DEFINES) +testname=$(TESTNAME) \
		-cm fsm+line+assert \
		-lca -kdb
		# simv 

wipe: clean
	rm -rf $(TOPLEVEL).include
	rm -rf alib-52
	rm -rf $(TOPLEVEL)
	rm -rf simv.daidir
	rm -rf DVEfiles
	rm -rf *.log
	rm -rf *.vpd
	rm -rf ucli.key
	rm -rf default.svf
	rm -rf simv
	rm -rf *.sv *.v *.svh
	rm -rf csrc
	rm -rf novas*
	rm -rf verdi_config_file
	rm -rf verdiLog
	rm -rf *.fsdb

clean:
	rm -rf DVEfiles
	rm -rf *.log
	rm -rf *.vpd
	rm -rf ucli.key
	rm -rf alib-52
	rm -rf $(TOPLEVEL)
	rm -rf simv.daidir
	rm -rf csrc
	rm -rf simv
	rm -rf novas*
	rm -rf verdi_config_file
	rm -rf verdiLog
	rm -rf *.fsdb
	rm -rf *.vdb
	rm -rf vdCovLog
	rm -rf .fsm.sch.verilog.xml
	rm -rf vdCov.conf
	rm -rf dut_log/*